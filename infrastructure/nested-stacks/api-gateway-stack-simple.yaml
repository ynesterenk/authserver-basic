AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simplified HTTP API Gateway configuration for debugging'

Parameters:
  Environment:
    Type: String
    Description: Deployment environment
  
  ProjectName:
    Type: String
    Description: Project name for resource naming
  
  LambdaFunctionArn:
    Type: String
    Description: ARN of the Lambda function
  
  ThrottleRateLimit:
    Type: Number
    Default: 100
    Description: API Gateway throttle rate limit (requests per second)
  
  ThrottleBurstLimit:
    Type: Number
    Default: 500
    Description: API Gateway throttle burst limit

Resources:
  # Simple HTTP API Gateway
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub '${ProjectName}-api-${Environment}'
      Description: !Sub 'Java Authorization Server HTTP API - ${Environment}'
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - POST
          - GET
          - OPTIONS
        AllowHeaders:
          - Authorization
          - Content-Type
        MaxAge: 300

  # Lambda integration
  LambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Ref LambdaFunctionArn
      PayloadFormatVersion: '2.0'
      TimeoutInMillis: 29000

  # Authentication validation route
  AuthValidateRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'POST /auth/validate'
      Target: !Sub 'integrations/${LambdaIntegration}'
      AuthorizationType: NONE

  # Health check route
  HealthRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'GET /health'
      Target: !Sub 'integrations/${LambdaIntegration}'
      AuthorizationType: NONE

  # API Gateway Stage
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: !Ref Environment
      AutoDeploy: true

  # Lambda permission for API Gateway
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Select [6, !Split [":", !Ref LambdaFunctionArn]]
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*'

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub 'https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ApiEndpoint'
  
  ApiGatewayId:
    Description: API Gateway ID
    Value: !Ref HttpApi
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ApiGatewayId' 